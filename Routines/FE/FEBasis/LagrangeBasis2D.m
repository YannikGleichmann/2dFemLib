function basis = LagrangeBasis2D(r)
% this functions computed the FE Basis of order r
% 
%--------------------------------------------------------------------------
% Reference:
% Finite Elemente - D. Braess
% 
%--------------------------------------------------------------------------
% Usage:
%           basis = LagrangeBasis2D(r)
% Input:
% * r       - order of FE Basis
% 
% Output:
% * basis   - function handle that can be evaluated at points (x,y)
%             Usage:
%                   basis = [N]                      pure basis function
%                   basis = [N,Nx,Ny]                up till 1st derivative
%                   basis = [N,Nx,Ny,Nxx,Nyy,Nxy]    up till 2nd derivative
% 
%--------------------------------------------------------------------------
% Author: Yannik Gleichmann
% Date:   13.06.2020

switch r
  case 1
    basis = @P1;
  case 2
    basis = @P2;
  case 3
    basis = @P3;
   otherwise
      error('Not implemented');
end

%% P1
function [N,Nx,Ny,Nxx,Nyy,Nxy] = P1(x,y)
  N = {1-x-y, x, y};
  if nargout<=1; return; end
  Nx = {-1+0*x, 1+0*x,   0*x};
  Ny = {-1+0*x,   0*x, 1+0*x};
  if nargout<=3; return; end
  Nxx = {0*x, 0*x, 0*x};
  Nyy = {0*x, 0*x, 0*x};
  Nxy = {0*x, 0*x, 0*x};
end

%% P2
function [N,Nx,Ny,Nxx,Nyy,Nxy] = P2(x,y)
  N = {1-3*x-3*y+2*x.^2+4.*x.*y+2*y.^2, 2*x.^2-x, 2*y.^2-y, ...
       4*x-4*x.*y-4*x.^2,               4*x.*y,   4*y-4*x.*y-4*y.^2};
  if nargout<=1; return; end
  Nx = {-3+4*x+4*y, 4*x-1,    0*x, 4-4*y-8*x, 4*y,      -4*y};
  Ny = {-3+4*y+4*x,    0*x, 4*y-1,      -4*x, 4*x, 4-4*x-8*y};
  if nargout<=3; return; end
  Nxx = {4+0*x, 4+0*x,   0*x, -8+0*x,   0*x,    0*x};
  Nyy = {4+0*x,   0*x, 4+0*x,    0*x,   0*x, -8+0*x};
  Nxy = {4+0*x,   0*x,   0*x, -4+0*x, 4+0*x, -4+0*x};
end

%% P3 not so sure if this is correct! (but it should be)
function [N,Nx,Ny,Nxx,Nyy,Nxy] = P3(x,y)
  % coefficients for the basis functions
   c = [1, -5.5, -5.5,    18,     9,     9, -13.5, -13.5,  -4.5,  -4.5;
        0,    1,    0,     0,  -4.5,     0,     0,     0,   4.5,     0;
        0,    0,    1,     0,     0,  -4.5,     0,     0,     0,   4.5;
        0,    9,    0, -22.5, -22.5,     0,    27,  13.5,  13.5,     0;
        0, -4.5,    0,   4.5,    18,     0, -13.5,     0, -13.5,     0;
        0,    0,    0,  -4.5,     0,     0,  13.5,     0,     0,     0;
        0,    0,    0,  -4.5,     0,     0,     0,  13.5,     0,     0;
        0,    0, -4.5,   4.5,     0,    18,     0, -13.5,     0, -13.5;
        0,    0,    9, -22.5,     0, -22.5,  13.5,    27,     0,  13.5;
        0,    0,    0,    27,     0,     0,   -27,   -27,     0,     0];
   N = {c(1,1) + c(1,2)*x + c(1,3)*y + c(1,4)*x.*y + c(1,5)*x.^2 + c(1,6)*y.^2 + c(1,7)*x.^2.*y + c(1,8)*x.*y.^2 + c(1,9)*x.^3 + c(1,10)*y.^3, ...
        c(2,1) + c(2,2)*x + c(2,3)*y + c(2,4)*x.*y + c(2,5)*x.^2 + c(2,6)*y.^2 + c(2,7)*x.^2.*y + c(2,8)*x.*y.^2 + c(2,9)*x.^3 + c(2,10)*y.^3, ...
        c(3,1) + c(3,2)*x + c(3,3)*y + c(3,4)*x.*y + c(3,5)*x.^2 + c(3,6)*y.^2 + c(3,7)*x.^2.*y + c(3,8)*x.*y.^2 + c(3,9)*x.^3 + c(3,10)*y.^3, ...
        c(4,1) + c(4,2)*x + c(4,3)*y + c(4,4)*x.*y + c(4,5)*x.^2 + c(4,6)*y.^2 + c(4,7)*x.^2.*y + c(4,8)*x.*y.^2 + c(4,9)*x.^3 + c(4,10)*y.^3, ...
        c(5,1) + c(5,2)*x + c(5,3)*y + c(5,4)*x.*y + c(5,5)*x.^2 + c(5,6)*y.^2 + c(5,7)*x.^2.*y + c(5,8)*x.*y.^2 + c(5,9)*x.^3 + c(5,10)*y.^3, ...
        c(6,1) + c(6,2)*x + c(6,3)*y + c(6,4)*x.*y + c(6,5)*x.^2 + c(6,6)*y.^2 + c(6,7)*x.^2.*y + c(6,8)*x.*y.^2 + c(6,9)*x.^3 + c(6,10)*y.^3, ...
        c(7,1) + c(7,2)*x + c(7,3)*y + c(7,4)*x.*y + c(7,5)*x.^2 + c(7,6)*y.^2 + c(7,7)*x.^2.*y + c(7,8)*x.*y.^2 + c(7,9)*x.^3 + c(7,10)*y.^3, ...
        c(8,1) + c(8,2)*x + c(8,3)*y + c(8,4)*x.*y + c(8,5)*x.^2 + c(8,6)*y.^2 + c(8,7)*x.^2.*y + c(8,8)*x.*y.^2 + c(8,9)*x.^3 + c(8,10)*y.^3, ...
        c(9,1) + c(9,2)*x + c(9,3)*y + c(9,4)*x.*y + c(9,5)*x.^2 + c(9,6)*y.^2 + c(9,7)*x.^2.*y + c(9,8)*x.*y.^2 + c(9,9)*x.^3 + c(9,10)*y.^3, ...
        c(10,1) + c(10,2)*x + c(10,3)*y + c(10,4)*x.*y + c(10,5)*x.^2 + c(10,6)*y.^2 + c(10,7)*x.^2.*y + c(10,8)*x.*y.^2 + c(10,9)*x.^3 + c(10,10)*y.^3
        };
   if nargout<=1; return; end
   Nx = {c(1,1)*0 + c(1,2) + c(1,3)*0 + c(1,4)*y + c(1,5)*2*x + c(1,6)*0 + c(1,7)*2*x.*y + c(1,8)*y.^2 + c(1,9)*3*x.^2 + c(1,10)*0, ...
         c(2,1)*0 + c(2,2) + c(2,3)*0 + c(2,4)*y + c(2,5)*2*x + c(2,6)*0 + c(2,7)*2*x.*y + c(2,8)*y.^2 + c(2,9)*3*x.^2 + c(2,10)*0, ...
         c(3,1)*0 + c(3,2) + c(3,3)*0 + c(3,4)*y + c(3,5)*2*x + c(3,6)*0 + c(3,7)*2*x.*y + c(3,8)*y.^2 + c(3,9)*3*x.^2 + c(3,10)*0, ...
         c(4,1)*0 + c(4,2) + c(4,3)*0 + c(4,4)*y + c(4,5)*2*x + c(4,6)*0 + c(4,7)*2*x.*y + c(4,8)*y.^2 + c(4,9)*3*x.^2 + c(4,10)*0, ...
         c(5,1)*0 + c(5,2) + c(5,3)*0 + c(5,4)*y + c(5,5)*2*x + c(5,6)*0 + c(5,7)*2*x.*y + c(5,8)*y.^2 + c(5,9)*3*x.^2 + c(5,10)*0, ...
         c(6,1)*0 + c(6,2) + c(6,3)*0 + c(6,4)*y + c(6,5)*2*x + c(6,6)*0 + c(6,7)*2*x.*y + c(6,8)*y.^2 + c(6,9)*3*x.^2 + c(6,10)*0, ...
         c(7,1)*0 + c(7,2) + c(7,3)*0 + c(7,4)*y + c(7,5)*2*x + c(7,6)*0 + c(7,7)*2*x.*y + c(7,8)*y.^2 + c(7,9)*3*x.^2 + c(7,10)*0, ...
         c(8,1)*0 + c(8,2) + c(8,3)*0 + c(8,4)*y + c(8,5)*2*x + c(8,6)*0 + c(8,7)*2*x.*y + c(8,8)*y.^2 + c(8,9)*3*x.^2 + c(8,10)*0, ...
         c(9,1)*0 + c(9,2) + c(9,3)*0 + c(9,4)*y + c(9,5)*2*x + c(9,6)*0 + c(9,7)*2*x.*y + c(9,8)*y.^2 + c(9,9)*3*x.^2 + c(9,10)*0, ...
         c(10,1)*0 + c(10,2) + c(10,3)*0 + c(10,4)*y + c(10,5)*2*x + c(10,6)*0 + c(10,7)*2*x.*y + c(10,8)*y.^2 + c(10,9)*3*x.^2 + c(10,10)*0
         };
   Ny = {c(1,1)*0 + c(1,2)*0 + c(1,3) + c(1,4)*x + c(1,5)*0 + c(1,6)*2*y + c(1,7)*x.^2 + c(1,8)*2*x.*y + c(1,9)*0 + c(1,10)*3*y.^2, ...
         c(2,1)*0 + c(2,2)*0 + c(2,3) + c(2,4)*x + c(2,5)*0 + c(2,6)*2*y + c(2,7)*x.^2 + c(2,8)*2*x.*y + c(2,9)*0 + c(2,10)*3*y.^2, ...
         c(3,1)*0 + c(3,2)*0 + c(3,3) + c(3,4)*x + c(3,5)*0 + c(3,6)*2*y + c(3,7)*x.^2 + c(3,8)*2*x.*y + c(3,9)*0 + c(3,10)*3*y.^2, ...
         c(4,1)*0 + c(4,2)*0 + c(4,3) + c(4,4)*x + c(4,5)*0 + c(4,6)*2*y + c(4,7)*x.^2 + c(4,8)*2*x.*y + c(4,9)*0 + c(4,10)*3*y.^2, ...
         c(5,1)*0 + c(5,2)*0 + c(5,3) + c(5,4)*x + c(5,5)*0 + c(5,6)*2*y + c(5,7)*x.^2 + c(5,8)*2*x.*y + c(5,9)*0 + c(5,10)*3*y.^2, ...
         c(6,1)*0 + c(6,2)*0 + c(6,3) + c(6,4)*x + c(6,5)*0 + c(6,6)*2*y + c(6,7)*x.^2 + c(6,8)*2*x.*y + c(6,9)*0 + c(6,10)*3*y.^2, ...
         c(7,1)*0 + c(7,2)*0 + c(7,3) + c(7,4)*x + c(7,5)*0 + c(7,6)*2*y + c(7,7)*x.^2 + c(7,8)*2*x.*y + c(7,9)*0 + c(7,10)*3*y.^2, ...
         c(8,1)*0 + c(8,2)*0 + c(8,3) + c(8,4)*x + c(8,5)*0 + c(8,6)*2*y + c(8,7)*x.^2 + c(8,8)*2*x.*y + c(8,9)*0 + c(8,10)*3*y.^2, ...
         c(9,1)*0 + c(9,2)*0 + c(9,3) + c(9,4)*x + c(9,5)*0 + c(9,6)*2*y + c(9,7)*x.^2 + c(9,8)*2*x.*y + c(9,9)*0 + c(9,10)*3*y.^2, ...
         c(10,1)*0 + c(10,2)*0 + c(10,3) + c(10,4)*x + c(10,5)*0 + c(10,6)*2*y + c(10,7)*x.^2 + c(10,8)*2*x.*y + c(10,9)*0 + c(10,10)*3*y.^2
         };
   if nargout<=3; return; end
   Nxx = {c(1,1)*0 + c(1,2)*0 + c(1,3)*0 + c(1,4)*0 + c(1,5)*2 + c(1,6)*0 + c(1,7)*2*y + c(1,8)*0 + c(1,9)*6*x + c(1,10)*0, ...
          c(2,1)*0 + c(2,2)*0 + c(2,3)*0 + c(2,4)*0 + c(2,5)*2 + c(2,6)*0 + c(2,7)*2*y + c(2,8)*0 + c(2,9)*6*x + c(2,10)*0, ...
          c(3,1)*0 + c(3,2)*0 + c(3,3)*0 + c(3,4)*0 + c(3,5)*2 + c(3,6)*0 + c(3,7)*2*y + c(3,8)*0 + c(3,9)*6*x + c(3,10)*0, ...
          c(4,1)*0 + c(4,2)*0 + c(4,3)*0 + c(4,4)*0 + c(4,5)*2 + c(4,6)*0 + c(4,7)*2*y + c(4,8)*0 + c(4,9)*6*x + c(4,10)*0, ...
          c(5,1)*0 + c(5,2)*0 + c(5,3)*0 + c(5,4)*0 + c(5,5)*2 + c(5,6)*0 + c(5,7)*2*y + c(5,8)*0 + c(5,9)*6*x + c(5,10)*0, ...
          c(6,1)*0 + c(6,2)*0 + c(6,3)*0 + c(6,4)*0 + c(6,5)*2 + c(6,6)*0 + c(6,7)*2*y + c(6,8)*0 + c(6,9)*6*x + c(6,10)*0, ...
          c(7,1)*0 + c(7,2)*0 + c(7,3)*0 + c(7,4)*0 + c(7,5)*2 + c(7,6)*0 + c(7,7)*2*y + c(7,8)*0 + c(7,9)*6*x + c(7,10)*0, ...
          c(8,1)*0 + c(8,2)*0 + c(8,3)*0 + c(8,4)*0 + c(8,5)*2 + c(8,6)*0 + c(8,7)*2*y + c(8,8)*0 + c(8,9)*6*x + c(8,10)*0, ...
          c(9,1)*0 + c(9,2)*0 + c(9,3)*0 + c(9,4)*0 + c(9,5)*2 + c(9,6)*0 + c(9,7)*2*y + c(9,8)*0 + c(9,9)*6*x + c(9,10)*0, ...
          c(10,1)*0 + c(10,2)*0 + c(10,3)*0 + c(10,4)*0 + c(10,5)*2 + c(10,6)*0 + c(10,7)*2*y + c(10,8)*0 + c(10,9)*6*x + c(10,10)*0
          };
   Nyy = {c(1,1)*0 + c(1,2)*0 + c(1,3)*0 + c(1,4)*0 + c(1,5)*0 + c(1,6)*2 + c(1,7)*0 + c(1,8)*2*x + c(1,9)*0 + c(1,10)*6*y, ...
          c(2,1)*0 + c(2,2)*0 + c(2,3)*0 + c(2,4)*0 + c(2,5)*0 + c(2,6)*2 + c(2,7)*0 + c(2,8)*2*x + c(2,9)*0 + c(2,10)*6*y, ...
          c(3,1)*0 + c(3,2)*0 + c(3,3)*0 + c(3,4)*0 + c(3,5)*0 + c(3,6)*2 + c(3,7)*0 + c(3,8)*2*x + c(3,9)*0 + c(3,10)*6*y, ...
          c(4,1)*0 + c(4,2)*0 + c(4,3)*0 + c(4,4)*0 + c(4,5)*0 + c(4,6)*2 + c(4,7)*0 + c(4,8)*2*x + c(4,9)*0 + c(4,10)*6*y, ...
          c(5,1)*0 + c(5,2)*0 + c(5,3)*0 + c(5,4)*0 + c(5,5)*0 + c(5,6)*2 + c(5,7)*0 + c(5,8)*2*x + c(5,9)*0 + c(5,10)*6*y, ...
          c(6,1)*0 + c(6,2)*0 + c(6,3)*0 + c(6,4)*0 + c(6,5)*0 + c(6,6)*2 + c(6,7)*0 + c(6,8)*2*x + c(6,9)*0 + c(6,10)*6*y, ...
          c(7,1)*0 + c(7,2)*0 + c(7,3)*0 + c(7,4)*0 + c(7,5)*0 + c(7,6)*2 + c(7,7)*0 + c(7,8)*2*x + c(7,9)*0 + c(7,10)*6*y, ...
          c(8,1)*0 + c(8,2)*0 + c(8,3)*0 + c(8,4)*0 + c(8,5)*0 + c(8,6)*2 + c(8,7)*0 + c(8,8)*2*x + c(8,9)*0 + c(8,10)*6*y, ...
          c(9,1)*0 + c(9,2)*0 + c(9,3)*0 + c(9,4)*0 + c(9,5)*0 + c(9,6)*2 + c(9,7)*0 + c(9,8)*2*x + c(9,9)*0 + c(9,10)*6*y, ...
          c(10,1)*0 + c(10,2)*0 + c(10,3)*0 + c(10,4)*0 + c(10,5)*0 + c(10,6)*2 + c(10,7)*0 + c(10,8)*2*x + c(10,9)*0 + c(10,10)*2*y.^2
          };
  Nxy = {c(1,1)*0 + c(1,2)*0 + c(1,3)*0 + c(1,4) + c(1,5)*0 + c(1,6)*0 + c(1,7)*2*x + c(1,8)*2*y + c(1,9)*0 + c(1,10)*0, ...
         c(2,1)*0 + c(2,2)*0 + c(2,3)*0 + c(2,4) + c(2,5)*0 + c(2,6)*0 + c(2,7)*2*x + c(2,8)*2*y + c(2,9)*0 + c(2,10)*0, ...
         c(3,1)*0 + c(3,2)*0 + c(3,3)*0 + c(3,4) + c(3,5)*0 + c(3,6)*0 + c(3,7)*2*x + c(3,8)*2*y + c(3,9)*0 + c(3,10)*0, ...
         c(4,1)*0 + c(4,2)*0 + c(4,3)*0 + c(4,4) + c(4,5)*0 + c(4,6)*0 + c(4,7)*2*x + c(4,8)*2*y + c(4,9)*0 + c(4,10)*0, ...
         c(5,1)*0 + c(5,2)*0 + c(5,3)*0 + c(5,4) + c(5,5)*0 + c(5,6)*0 + c(5,7)*2*x + c(5,8)*2*y + c(5,9)*0 + c(5,10)*0, ...
         c(6,1)*0 + c(6,2)*0 + c(6,3)*0 + c(6,4) + c(6,5)*0 + c(6,6)*0 + c(6,7)*2*x + c(6,8)*2*y + c(6,9)*0 + c(6,10)*0, ...
         c(7,1)*0 + c(7,2)*0 + c(7,3)*0 + c(7,4) + c(7,5)*0 + c(7,6)*0 + c(7,7)*2*x + c(7,8)*2*y + c(7,9)*0 + c(7,10)*0, ...
         c(8,1)*0 + c(8,2)*0 + c(8,3)*0 + c(8,4) + c(8,5)*0 + c(8,6)*0 + c(8,7)*2*x + c(8,8)*2*y + c(8,9)*0 + c(8,10)*0, ...
         c(9,1)*0 + c(9,2)*0 + c(9,3)*0 + c(9,4) + c(9,5)*0 + c(9,6)*0 + c(9,7)*2*x + c(9,8)*2*y + c(9,9)*0 + c(9,10)*0, ...
         c(10,1)*0 + c(10,2)*0 + c(10,3)*0 + c(10,4) + c(10,5)*0 + c(10,6)*0 + c(10,7)*2*x + c(10,8)*2*y + c(10,9)*0 + c(10,10)*0
         };
end

end